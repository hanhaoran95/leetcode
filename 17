class Solution {
    public List<String> letterCombinations(String digits) {
        List<String> res = new ArrayList<>();
        if(digits.length() == 0) return res;
        letterCombinationsHelper(digits, 0, new char[digits.length()], res);
        return res;
    }
    
    private static final String[] map = {"0", "1", "abc", "def", "ghi",
                                              "jkl", "mno", "pqrs", "tuv",
                                              "wxyz"};
    
    private static void letterCombinationsHelper(String digits, int digit,
                                    char[] partialRes, List<String> res) {
        if(digit == digits.length()){
            res.add(new String(partialRes));
        } else {
            for(int i = 0; i < map[digits.charAt(digit) - '0'].length(); i++) {
                char c = map[digits.charAt(digit) - '0'].charAt(i);
                partialRes[digit] = c;
                letterCombinationsHelper(digits, digit+1, partialRes, res);
            }
        }
    }
}
